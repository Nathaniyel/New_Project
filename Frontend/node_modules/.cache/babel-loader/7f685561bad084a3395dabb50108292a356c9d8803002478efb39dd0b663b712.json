{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\intern\\\\Frontend\\\\src\\\\components\\\\FilterBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { expenseAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterBar = ({\n  onFilterChange,\n  currentFilters\n}) => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({\n    category: '',\n    startDate: '',\n    endDate: ''\n  });\n  useEffect(() => {\n    loadCategories();\n  }, []);\n  useEffect(() => {\n    setFilters(currentFilters);\n  }, [currentFilters]);\n  const loadCategories = async () => {\n    try {\n      const response = await expenseAPI.getCategories();\n      setCategories(response.data.data);\n    } catch (err) {\n      console.error('Failed to load categories');\n    }\n  };\n  const handleFilterChange = (name, value) => {\n    const newFilters = {\n      ...filters,\n      [name]: value\n    };\n    setFilters(newFilters);\n    onFilterChange(newFilters);\n  };\n  const clearFilters = () => {\n    const clearedFilters = {\n      category: '',\n      startDate: '',\n      endDate: ''\n    };\n    setFilters(clearedFilters);\n    onFilterChange(clearedFilters);\n  };\n  const hasActiveFilters = filters.category || filters.startDate || filters.endDate;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Filter Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: filters.category,\n          onChange: e => handleFilterChange('category', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat === 'All' ? '' : cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"From Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.startDate,\n          onChange: e => handleFilterChange('startDate', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"To Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filters.endDate,\n          onChange: e => handleFilterChange('endDate', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-actions\",\n        children: hasActiveFilters && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          className: \"btn-clear\",\n          children: \"Clear Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterBar, \"kYFsTSFXU7K3x3z1jAXXF8BnDgQ=\");\n_c = FilterBar;\nexport default FilterBar;\nvar _c;\n$RefreshReg$(_c, \"FilterBar\");","map":{"version":3,"names":["React","useState","useEffect","expenseAPI","jsxDEV","_jsxDEV","FilterBar","onFilterChange","currentFilters","_s","categories","setCategories","filters","setFilters","category","startDate","endDate","loadCategories","response","getCategories","data","err","console","error","handleFilterChange","name","value","newFilters","clearFilters","clearedFilters","hasActiveFilters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","map","cat","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/intern/Frontend/src/components/FilterBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { expenseAPI } from '../services/api';\n\nconst FilterBar = ({ onFilterChange, currentFilters }) => {\n  const [categories, setCategories] = useState([]);\n  const [filters, setFilters] = useState({\n    category: '',\n    startDate: '',\n    endDate: ''\n  });\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  useEffect(() => {\n    setFilters(currentFilters);\n  }, [currentFilters]);\n\n  const loadCategories = async () => {\n    try {\n      const response = await expenseAPI.getCategories();\n      setCategories(response.data.data);\n    } catch (err) {\n      console.error('Failed to load categories');\n    }\n  };\n\n  const handleFilterChange = (name, value) => {\n    const newFilters = {\n      ...filters,\n      [name]: value\n    };\n    setFilters(newFilters);\n    onFilterChange(newFilters);\n  };\n\n  const clearFilters = () => {\n    const clearedFilters = {\n      category: '',\n      startDate: '',\n      endDate: ''\n    };\n    setFilters(clearedFilters);\n    onFilterChange(clearedFilters);\n  };\n\n  const hasActiveFilters = filters.category || filters.startDate || filters.endDate;\n\n  return (\n    <div className=\"filter-bar\">\n      <h4>Filter Expenses</h4>\n      \n      <div className=\"filter-controls\">\n        <div className=\"filter-group\">\n          <label>Category</label>\n          <select\n            value={filters.category}\n            onChange={(e) => handleFilterChange('category', e.target.value)}\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map(cat => (\n              <option key={cat} value={cat === 'All' ? '' : cat}>\n                {cat}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <div className=\"filter-group\">\n          <label>From Date</label>\n          <input\n            type=\"date\"\n            value={filters.startDate}\n            onChange={(e) => handleFilterChange('startDate', e.target.value)}\n          />\n        </div>\n\n        <div className=\"filter-group\">\n          <label>To Date</label>\n          <input\n            type=\"date\"\n            value={filters.endDate}\n            onChange={(e) => handleFilterChange('endDate', e.target.value)}\n          />\n        </div>\n\n        <div className=\"filter-actions\">\n          {hasActiveFilters && (\n            <button \n              onClick={clearFilters}\n              className=\"btn-clear\"\n            >\n              Clear Filters\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}